(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{405:function(_,v,e){_.exports=e.p+"assets/img/image-20211231164302374.5a01e3f0.png"},470:function(_,v,e){"use strict";e.r(v);var t=e(56),o=Object(t.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"盒模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[_._v("#")]),_._v(" 盒模型")]),_._v(" "),t("h2",{attrs:{id:"_1、分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、分类"}},[_._v("#")]),_._v(" 1、分类")]),_._v(" "),t("h3",{attrs:{id:"_1-block-元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-block-元素"}},[_._v("#")]),_._v(" （1）block 元素")]),_._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:e(405),alt:"image-20211231164302374"}}),_._v(" "),t("p",[_._v("默认情况下的盒模型是"),t("code",[_._v("box-sizing: content-box;")]),_._v("，即我们设置的"),t("code",[_._v("width")]),_._v("和"),t("code",[_._v("height")]),_._v("属性是以"),t("code",[_._v("content")]),_._v("为标准的。我们常常会想要以"),t("code",[_._v("border")]),_._v("为边界设置大小，可以使用"),t("code",[_._v("box-sizing: border-box;")]),_._v("。")]),_._v(" "),t("p",[_._v("想要全局设置可以采用如下做法：")]),_._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[t("span",{pre:!0,attrs:{class:"token selector"}},[_._v("html")]),_._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[_._v("box-sizing")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" border-box"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n"),t("span",{pre:!0,attrs:{class:"token selector"}},[_._v("*,\n*::before,\n*::after")]),_._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[_._v("box-sizing")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" inherit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n")])])]),t("blockquote",[t("p",[_._v("如果你有两个外边距相接的元素，这些外边距将合并为一个外边距，即最大的单个外边距的大小。这种现象称为"),t("code",[_._v("外边距折叠")]),_._v("。")])]),_._v(" "),t("h3",{attrs:{id:"_2-inline-元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-inline-元素"}},[_._v("#")]),_._v(" （2）inline 元素")]),_._v(" "),t("p",[_._v("盒模型的"),t("code",[_._v("内联方向")]),_._v("上的概念适用于"),t("code",[_._v("inline")]),_._v("盒子。")]),_._v(" "),t("p",[_._v("可以设置如下属性：")]),_._v(" "),t("ul",[t("li",[_._v("margin-left/right")]),_._v(" "),t("li",[_._v("padding-left/right")]),_._v(" "),t("li",[_._v("border")])]),_._v(" "),t("p",[_._v("可见"),t("code",[_._v("inline")]),_._v("不能设置"),t("code",[_._v("height")]),_._v("和"),t("code",[_._v("width")]),_._v("，也不能设置垂直方向上的"),t("code",[_._v("padding")]),_._v("和"),t("code",[_._v("margin")]),_._v("。")]),_._v(" "),t("h4",{attrs:{id:"_3-inline-block-元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-inline-block-元素"}},[_._v("#")]),_._v(" （3）inline-block 元素")]),_._v(" "),t("p",[t("code",[_._v("inline-block")]),_._v("具有"),t("code",[_._v("block")]),_._v("的所有属性，但是它像"),t("code",[_._v("inline")]),_._v("一样不会占据整行。当我们想要对一些"),t("code",[_._v("span")]),_._v("、"),t("code",[_._v("a")]),_._v("标签设置显示背景大小，又不想覆盖其他内容时可以使用。同时也能借此扩大内联元素的显示范围。")]),_._v(" "),t("h2",{attrs:{id:"_2、转化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、转化"}},[_._v("#")]),_._v(" 2、转化")]),_._v(" "),t("p",[t("code",[_._v("盒模型")]),_._v("是指 css 中盒子的一系列规范。这些规范主要针对"),t("code",[_._v("块级盒子")]),_._v("，部分适用于"),t("code",[_._v("内联盒子")]),_._v("（行内盒子）。")]),_._v(" "),t("p",[_._v("盒子类型可以通过"),t("code",[_._v("display")]),_._v("属性的"),t("code",[_._v("block")]),_._v("和"),t("code",[_._v("inline")]),_._v("分别控制。注意此时的分类是指盒子的"),t("code",[_._v("对外表现")]),_._v("，"),t("code",[_._v("display")]),_._v("同时也能设置容器的"),t("code",[_._v("对内表现")]),_._v("，即容器内部元素的布局方式，包括"),t("code",[_._v("flex")]),_._v("、"),t("code",[_._v("grid")]),_._v("、"),t("code",[_._v("box")]),_._v("等。")]),_._v(" "),t("p",[_._v("可见"),t("code",[_._v("display")]),_._v("属性具有两种用途，不要混淆。")]),_._v(" "),t("blockquote",[t("p",[_._v("当把"),t("code",[_._v("inline")]),_._v("转化为"),t("code",[_._v("block")]),_._v("时一般不需要做其他处理。但当"),t("code",[_._v("block")]),_._v("转为"),t("code",[_._v("inline")]),_._v("时要注意原来"),t("code",[_._v("block")]),_._v("中存在其他"),t("code",[_._v("block")]),_._v("时的情况。因为内部"),t("code",[_._v("block")]),_._v("的对外表现并没有变化，此时外层尽管转化成了"),t("code",[_._v("inline")]),_._v("，但效果还是"),t("code",[_._v("block")]),_._v("，可以看做被内层元素撑开了。是不是说此时需要给每个内层元素也加上"),t("code",[_._v("inline")]),_._v("属性？不需要这么麻烦，我们只需要给外层的容器设置对内"),t("code",[_._v("flex")]),_._v("就行了，但因为我们已经用过"),t("code",[_._v("display")]),_._v("属性，一旦覆盖之前的就失效了，所有此时我们使用"),t("code",[_._v("inline-flex")]),_._v("值来代替。")])])])}),[],!1,null,null,null);v.default=o.exports}}]);