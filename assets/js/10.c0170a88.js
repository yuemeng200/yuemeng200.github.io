(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{402:function(t,a,e){t.exports=e.p+"assets/img/httpnegoserver.328b50bb.png"},460:function(t,a,e){"use strict";e.r(a);var s=e(56),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),s("h2",{attrs:{id:"_1、请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、请求"}},[t._v("#")]),t._v(" 1、请求")]),t._v(" "),s("h3",{attrs:{id:"_1-请求行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-请求行"}},[t._v("#")]),t._v(" （1）请求行")]),t._v(" "),s("p",[t._v("Method + URI + Version")]),t._v(" "),s("h3",{attrs:{id:"_2-请求头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-请求头"}},[t._v("#")]),t._v(" （2）请求头")]),t._v(" "),s("h4",{attrs:{id:"accept"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#accept"}},[t._v("#")]),t._v(" Accept")]),t._v(" "),s("p",[t._v("包括"),s("code",[t._v("Accept")]),t._v("、"),s("code",[t._v("Accept-Language")]),t._v("、"),s("code",[t._v("Accept-Encoding")]),t._v("、"),s("code",[t._v("Accept-Charset")]),t._v("等")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:e(402),alt:"img"}}),t._v(" "),s("h4",{attrs:{id:"origin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#origin"}},[t._v("#")]),t._v(" Origin")]),t._v(" "),s("p",[t._v("用于跨域时表明来源站点。")]),t._v(" "),s("h4",{attrs:{id:"access-control-request-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-control-request-method"}},[t._v("#")]),t._v(" Access-Control-Request-Method")]),t._v(" "),s("p",[t._v("预检请求查询的 method")]),t._v(" "),s("h4",{attrs:{id:"access-control-request-headers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-control-request-headers"}},[t._v("#")]),t._v(" Access-Control-Request-Headers")]),t._v(" "),s("p",[t._v("预检请求查询的 headers")]),t._v(" "),s("h4",{attrs:{id:"authorization"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authorization"}},[t._v("#")]),t._v(" Authorization")]),t._v(" "),s("p",[s("code",[t._v("Authorization: <type> <credentials>")]),t._v("\n一般可以用来携带"),s("code",[t._v("token")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"referer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#referer"}},[t._v("#")]),t._v(" Referer")]),t._v(" "),s("p",[t._v("Referer 请求头包含了当前请求页面的来源页面的地址，即表示当前页面是通过此来源页面里的链接进入的。服务端一般使用 Referer 请求头识别访问来源，可能会以此进行统计分析、日志记录以及缓存优化等。\n在以下两种情况下，Referer 不会被发送：")]),t._v(" "),s("ul",[s("li",[t._v('来源页面采用的协议为表示本地文件的 "file" 或者 "data" URI；')]),t._v(" "),s("li",[t._v("当前请求页面采用的是非安全协议，而来源页面采用的是安全协议（HTTPS）。")])]),t._v(" "),s("h2",{attrs:{id:"_2、响应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、响应"}},[t._v("#")]),t._v(" 2、响应")]),t._v(" "),s("h3",{attrs:{id:"响应行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应行"}},[t._v("#")]),t._v(" 响应行")]),t._v(" "),s("p",[t._v("响应行：version + status code + veason")]),t._v(" "),s("h3",{attrs:{id:"响应头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应头"}},[t._v("#")]),t._v(" 响应头")]),t._v(" "),s("h4",{attrs:{id:"access-control-allow-origin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-control-allow-origin"}},[t._v("#")]),t._v(" Access-Control-Allow-Origin")]),t._v(" "),s("p",[s("code",[t._v("Access-Control-Allow-Origin: origin | *")])]),t._v(" "),s("h4",{attrs:{id:"access-control-expose-headers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-control-expose-headers"}},[t._v("#")]),t._v(" Access-Control-Expose-Headers")]),t._v(" "),s("p",[t._v("在跨源访问时，XMLHttpRequest 对象的 getResponseHeader() 方法只能拿到一些最基本的响应头，Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma，如果要访问其他头，则需要服务器设置本响应头。")]),t._v(" "),s("p",[t._v("Access-Control-Expose-Headers 头让服务器把允许浏览器访问的头放入白名单，例如：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Access-Control-Expose-Headers: X-My-Custom-Header, X-Another-Custom-Header\n")])])]),s("h4",{attrs:{id:"access-control-max-age"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-control-max-age"}},[t._v("#")]),t._v(" Access-Control-Max-Age")]),t._v(" "),s("p",[t._v("预检请求的缓存时间")]),t._v(" "),s("h4",{attrs:{id:"access-control-allow-credentials"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-control-allow-credentials"}},[t._v("#")]),t._v(" Access-Control-Allow-Credentials")]),t._v(" "),s("p",[t._v("表示跨域请求的"),s("code",[t._v("凭证")]),t._v("是否支持被携带，对于简单请求会直接控制响应能否被接收，对于预检请求代表反馈的支持信息。")]),t._v(" "),s("h4",{attrs:{id:"access-control-allow-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-control-allow-methods"}},[t._v("#")]),t._v(" Access-Control-Allow-Methods")]),t._v(" "),s("h4",{attrs:{id:"access-control-allow-headers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-control-allow-headers"}},[t._v("#")]),t._v(" Access-Control-Allow-Headers")]),t._v(" "),s("h4",{attrs:{id:"allow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#allow"}},[t._v("#")]),t._v(" Allow")]),t._v(" "),s("p",[t._v("Allow 首部字段用于枚举资源所支持的 HTTP 方法的集合。若服务器返回状态码 405 Method Not Allowed，则该首部字段亦需要同时返回给客户端。如果 Allow 首部字段的值为空，说明资源不接受使用任何 HTTP 方法的请求。这是可能的，比如服务器需要临时禁止对资源的任何访问。")]),t._v(" "),s("h4",{attrs:{id:"cache-control"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" Cache-Control")]),t._v(" "),s("p",[t._v("通过指定指令来实现缓存机制。缓存指令是单向的，这意味着在请求中设置的指令，不一定被包含在响应中。")]),t._v(" "),s("ul",[s("li",[t._v("public")]),t._v(" "),s("li",[t._v("private")]),t._v(" "),s("li",[t._v("no-cache：取消强缓存")]),t._v(" "),s("li",[t._v("no-store：取消缓存")]),t._v(" "),s("li",[t._v("max-age=second")]),t._v(" "),s("li",[t._v("must-revalidate：一旦过期，在验证前不可用")])]),t._v(" "),s("p",[t._v("配合"),s("code",[t._v("If-Modified-Since")]),t._v("使用。")]),t._v(" "),s("h4",{attrs:{id:"etag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#etag"}},[t._v("#")]),t._v(" ETag")]),t._v(" "),s("p",[t._v("配合"),s("code",[t._v("If-Match")]),t._v("和"),s("code",[t._v("If-None-Match")]),t._v("使用。")]),t._v(" "),s("h4",{attrs:{id:"expires"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[t._v("#")]),t._v(" Expires")]),t._v(" "),s("p",[t._v("缓存过期时间，优先级低于"),s("code",[t._v("Cache-Control")])]),t._v(" "),s("h2",{attrs:{id:"_3、发展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、发展"}},[t._v("#")]),t._v(" 3、发展")]),t._v(" "),s("h3",{attrs:{id:"http-0-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-0-9"}},[t._v("#")]),t._v(" HTTP/0.9")]),t._v(" "),s("p",[t._v("只支持 GET，只支持响应 HTML。没有请求头和请求体。")]),t._v(" "),s("h3",{attrs:{id:"http-1-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0"}},[t._v("#")]),t._v(" HTTP/1.0")]),t._v(" "),s("p",[t._v("添加了大部分请求头。引入缓存和状态码等功能。\n每个 TCP 连接只能发送一个请求。发送数据完毕，连接就关闭，如果还要请求其他资源，就必须再新建一个连接。每次都要经历一个慢启动的过程。")]),t._v(" "),s("h3",{attrs:{id:"http-1-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1"}},[t._v("#")]),t._v(" HTTP/1.1")]),t._v(" "),s("p",[t._v("引入了持久连接（persistent connection），即 TCP 连接默认不关闭，可以被多个请求复用，不用声明"),s("code",[t._v("Connection: keep-alive")]),t._v("。客户端和服务器发现对方一段时间没有活动，就可以主动关闭连接。不过，规范的做法是，客户端在最后一个请求时，发送"),s("code",[t._v("Connection: close")]),t._v("，明确要求服务器关闭 TCP 连接。")]),t._v(" "),s("blockquote",[s("p",[t._v("1.1 版还引入了管道机制（pipelining）。以前的做法是，在同一个 TCP 连接里面，先发送 A 请求，然后等待服务器做出回应，收到后再发出 B 请求。管道机制则是允许浏览器同时发出 A 请求和 B 请求，但是服务器还是按照顺序，先回应 A 请求，完成后再回应 B 请求。实现不好。")])]),t._v(" "),s("p",[t._v("同一个域名最多 6 个 TCP 持久连接，实现多路同时传输，同时使用 CDN 多个域名还能加速。\n总结：1.1 通过持久连接减少了建立连接的次数，提高了响应速度，但是队头阻塞使得带宽无法充分利用。资源需要排队加载。")]),t._v(" "),s("h3",{attrs:{id:"http-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-2"}},[t._v("#")]),t._v(" HTTP/2")]),t._v(" "),s("h4",{attrs:{id:"多路复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多路复用"}},[t._v("#")]),t._v(" 多路复用")]),t._v(" "),s("p",[t._v("一个域名使用单个长连接，并消除队头阻塞。服务器决定响应优先级。")]),t._v(" "),s("p",[t._v("通过"),s("code",[t._v("二进制分帧")]),t._v("层实现，灵活控制。")]),t._v(" "),s("h4",{attrs:{id:"数据流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据流"}},[t._v("#")]),t._v(" 数据流")]),t._v(" "),s("p",[t._v("HTTP/2 将每个请求或回应的所有数据包，称为一个数据流（stream）。每个数据流都有一个独一无二的编号。这就是说，HTTP/2 可以取消某一次请求，同时保证 TCP 连接还打开着，可以被其他请求使用。客户端还可以指定数据流的优先级。优先级越高，服务器就会越早回应。")]),t._v(" "),s("h4",{attrs:{id:"头信息压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#头信息压缩"}},[t._v("#")]),t._v(" 头信息压缩")]),t._v(" "),s("p",[t._v("一方面，头信息使用 gzip 或 compress 压缩后再发送；另一方面，客户端和服务器同时维护一张头信息表，所有字段都会存入这个表，生成一个索引号，以后就不发送同样字段了，只发送索引号，这样就提高速度了。")]),t._v(" "),s("h4",{attrs:{id:"服务器推送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器推送"}},[t._v("#")]),t._v(" 服务器推送")]),t._v(" "),s("p",[t._v("HTTP/2 允许服务器未经请求，主动向客户端发送资源，这叫做服务器推送（server push）。")]),t._v(" "),s("p",[t._v("总结：HTTP/2 通过多路复用增加了带宽的利用率，代价是发的包更大了。")]),t._v(" "),s("blockquote",[s("p",[t._v("更多的信息意味着更灵活的控制，也以为着更大的资源损耗。")])]),t._v(" "),s("h3",{attrs:{id:"http-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-3"}},[t._v("#")]),t._v(" HTTP/3")]),t._v(" "),s("p",[t._v("是为了优化 TCP 而实现的，TCP 面临的问题：丢包的队头阻塞和建立连接的延时。\n"),s("code",[t._v("QUIC")]),t._v("基于"),s("code",[t._v("UDP")]),t._v("实现：")]),t._v(" "),s("ul",[s("li",[t._v("TCP 的流量控制和可靠性传输")]),t._v(" "),s("li",[t._v("TSL 加密")]),t._v(" "),s("li",[t._v("HTTP/2 相关功能")]),t._v(" "),s("li",[t._v("快速握手")])]),t._v(" "),s("h3",{attrs:{id:"https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")])])}),[],!1,null,null,null);a.default=r.exports}}]);